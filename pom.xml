<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2023 Bloomberg Finance L.P.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.bloomberg.bmq</groupId>
  <artifactId>bmq-sdk-java</artifactId>
  <version>0.0.16-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>BlazingMQ Java SDK Bundle</name>
  <description>BlazingMQ Java SDK Bundle</description>
  <url>https://github.com/bloomberg/blazingmq-sdk-java/tree/main/</url>
  <organization>
    <name>Bloomberg L.P.</name>
    <url>https://www.bloomberg.com</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>bloomberg-oss</id>
      <name>BlazingMQ Contributors</name>
      <email>opensource@bloomberg.net</email>
      <organization>Bloomberg L.P.</organization>
      <organizationUrl>https://github.com/bloomberg</organizationUrl>
    </developer>
  </developers>

  <modules>
    <module>bmq-sdk</module>
    <module>bmq-examples</module>
  </modules>

  <scm>
    <connection>scm:git:https://git@github.com/bloomberg/blazingmq-sdk-java.git</connection>
    <developerConnection>scm:git:https://git@github.com/bloomberg/blazingmq-sdk-java.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/bloomberg/blazingmq-sdk-java/tree/main/</url>
  </scm>

  <distributionManagement>

    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>

    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>

  </distributionManagement>

  <properties>
    <rootLocation>${project.basedir}</rootLocation>
    <maven.deploy.skip>true</maven.deploy.skip>
    <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>

    <git.url />
    <artifactory.central.url />
    <artifactory.snapshot.url />

    <sonar.host.url />
    <sonar.scm.disabled>true</sonar.scm.disabled>
    <sonar.java.source>8</sonar.java.source>

    <skipUnitTests>false</skipUnitTests>

    <!-- Rerun failed unit tests up to 3 times -->
    <surefire.rerunFailingTestsCount>3</surefire.rerunFailingTestsCount>

    <!-- More than 1 fork is not supported until we have a way to dynamically
     generate static broker configs with different ports.
     See also: BmqBroker.java -->
    <failsafe.forkCount>1</failsafe.forkCount>

    <!-- Rerun failed integrations tests up to 3 times -->
    <failsafe.rerunFailingTestsCount>3</failsafe.rerunFailingTestsCount>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.bloomberg.bmq</groupId>
        <artifactId>bmq-sdk</artifactId>
        <version>0.0.16-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.36</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>2.18.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.18.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>2.18.0</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.12</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>4.1.79.Final</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>[2.8.9,)</version>
      </dependency>

      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>4.7.1</version>
      </dependency>

      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- last version that supports JDK8 -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>4.11.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>4.11.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>[2.7,)</version>
      </dependency>

      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>1.23</version>
      </dependency>

      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>1.23</version>
      </dependency>

      <dependency>
        <groupId>com.github.docker-java</groupId>
        <artifactId>docker-java-core</artifactId>
        <version>3.2.13</version>
      </dependency>

      <dependency>
        <groupId>com.github.docker-java</groupId>
        <artifactId>docker-java-transport-httpclient5</artifactId>
        <version>3.2.13</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <!-- Default configuration for plugins, can be used and overridden in
         child pom projects -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.4.0</version>
          <configuration>
            <flattenMode>ossrh</flattenMode>
          </configuration>
          <executions>
            <!-- enable flattening -->
            <execution>
              <id>flatten</id>
              <goals>
                <goal>flatten</goal>
              </goals>
              <phase>process-resources</phase>
            </execution>
            <!-- ensure proper cleanup -->
            <execution>
              <id>flatten.clean</id>
              <goals>
                <goal>clean</goal>
              </goals>
              <phase>clean</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0</version>
          <executions>
            <execution>
              <id>enforce-log4j-and-jdk</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <rules>
                  <bannedDependencies>
                    <excludes>
                      <exclude>org.apache.logging.log4j:*:(,2.17.1)</exclude>
                    </excludes>
                    <message>log4j older than v.2.17.1 is banned</message>
                  </bannedDependencies>
                  <requireJavaVersion>
                    <version>[1.8,9),[11,12),[17,18)</version>
                    <message>Only JDK8, JDK11 and JDK17 are supported</message>
                  </requireJavaVersion>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
          <configuration>
            <failOnWarning>true</failOnWarning>
            <showWarnings>true</showWarnings>
            <compilerArgs>
              <arg>-Xlint:-processing</arg>
              <arg>-Xlint:all</arg>
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.7.1.1</version>
          <configuration>
            <failOnError>true</failOnError>
            <effort>Max</effort>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>compile</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.github.ferstl</groupId>
          <artifactId>depgraph-maven-plugin</artifactId>
          <version>3.3.0</version>
          <configuration />
          <executions>
            <execution>
              <id>aggregate</id>
              <goals>
                <goal>aggregate</goal>
              </goals>
              <configuration>
                <graphFormat>dot</graphFormat>
                <createImage>true</createImage>
                <imageFormage>png</imageFormage>
                <outputFileName>depgraph-aggregate</outputFileName>
                <showGroupIds>true</showGroupIds>
                <showVersions>true</showVersions>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.6.0.1398</version>
          <executions>
            <execution>
              <goals>
                <goal>sonar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.28.0</version>
          <configuration>
            <upToDateChecking>
              <enabled>true</enabled>
            </upToDateChecking>
            <pom>
              <includes>
                <include>pom.xml</include>
              </includes>
              <sortPom>
                <!-- Override default values below so maven release plugin can update the pom and build the project -->
                <expandEmptyElements>false</expandEmptyElements>
                <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
              </sortPom>
            </pom>
            <java>
              <toggleOffOn />
              <includes>
                <include>src/main/java*/**/*.java</include>
                <include>src/test/java/**/*.java</include>
              </includes>
              <excludes>
                <!-- ExpressionScanner class is auto-generated by jflex and there are warnings  -->
                <exclude>src/main/java/com/bloomberg/bmq/impl/infr/util/expressionvalidator/ExpressionScanner.java</exclude>
              </excludes>
              <googleJavaFormat>
                <version>1.7</version>
                <style>AOSP</style>
              </googleJavaFormat>
              <licenseHeader>
                <file>${rootLocation}/license-header</file>
              </licenseHeader>
            </java>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>compile</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0</version>
          <configuration>
            <!-- argLine>${surefireArgLine}</argLine -->
            <!-- this line interferes with jacoco execution -->
            <skip>${skipUnitTests}</skip>
            <parallel>classesAndMethods</parallel>
            <threadCount>4</threadCount>
            <trimStackTrace>false</trimStackTrace>
            <useFile>false</useFile>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.8</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Sealed>true</Sealed>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
          <configuration>
            <quiet>true</quiet>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <argLine>${failsafeArgLine} -Xmx1024m</argLine>
                <forkCount>${failsafe.forkCount}</forkCount>
                <reuseForks>true</reuseForks>
                <trimStackTrace>false</trimStackTrace>
                <useFile>false</useFile>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Combine and strip parent/child pom files -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>

      <!-- Enforce log4j and JDK version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

      <!-- Check code style -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>

    </plugins>
  </build>

  <!-- We use profiles to modify configuration of plugins depending on JDK being used:
       - JDK8
         This profile is activated with JDK8 and sets compiler "source" and "target" parameters to "1.8" (so the code
         can run with JVM8 or newer)
       - JDK9-and-above
         This profile is activated with JDK9 and above (actually, only JDK11 and JDK17 are supported) and sets
         compiler "release" parameter to "8" (so all the code still can run with JVM8) -->
  <profiles>
    <profile>
      <id>JDK8</id>
      <activation>
        <jdk>1.8</jdk>
      </activation>
      <properties>
        <!-- JDK 8 compiler settings -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
      </properties>
    </profile>

    <profile>
      <id>JDK9-and-above</id>
      <activation>
        <!-- This is a general profile which is activated for JDK9 or newer.
             If you need to support specific JDK, create new profile or update this one e.g. for JDK17
             set the xml element below to 17. See version range spec for more information:
             https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html -->
        <jdk>[9,)</jdk>
      </activation>
      <properties>
        <!-- By default, compile everything to Java 8 (better to set this explicitly rather than use default value).
             If necessary, change release parameter to greater value.
             For instance, set release to 17 in order to enable Java 17 features
             and generate bytecode compatible with JVM17 and newer -->
        <maven.compiler.release>8</maven.compiler.release>
      </properties>
    </profile>

    <profile>
      <id>ossrh</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>2.0.1</version>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.6.0</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
